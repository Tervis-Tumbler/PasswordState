#
# Module manifest for module 'PasswordState'
#
# Generated by: Brandon Olin
#
# Generated on: 5/14/2015
#

@{

# Script module or binary module file associated with this manifest.
RootModule = 'PasswordState.psm1'

# Version number of this module.
ModuleVersion = '1.2.3'

# ID used to uniquely identify this module
GUID = '659695ad-f4eb-4ca4-8359-ae3cf74fe875'

# Author of this module
Author = 'Brandon Olin'

# Copyright statement for this module
Copyright = '(c) 2015 Brandon Olin. All rights reserved.'

# Description of the functionality provided by this module
Description = 'PowerShell module for interacting with PasswordState API.'

# Minimum version of the Windows PowerShell engine required by this module
PowerShellVersion = '3.0'

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module
# DotNetFrameworkVersion = ''

# Minimum version of the common language runtime (CLR) required by this module
# CLRVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
# RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Functions to export from this module
FunctionsToExport = @(
    'Export-PasswordStateApiKey',
    'Find-PasswordStatePassword',
    'Get-PasswordStateAllLists',
    'Get-PasswordStateAllPasswords',
    'Get-PasswordStateApiKey',
    'Get-PasswordStateList',
    'Get-PasswordStateListPasswords',
    'Get-PasswordStatePassword',
    'Get-PasswordStatePasswordHistory',
    'Import-PasswordStateApiKey',
    'Initialize-PasswordStateRepository',
    'New-PasswordStatePassword',
    'New-PasswordStateRandomPassword',
    'Set-PasswordStatePassword',
    'Set-PasswordStateDocument'
)

# Cmdlets to export from this module
#CmdletsToExport = '*'

# Variables to export from this module
#VariablesToExport = '*'

# Aliases to export from this module
#AliasesToExport = '*'

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
# FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = 'PasswordState', 'Credential', 'Secret'

        # A URL to the license for this module.
        LicenseUri = 'https://github.com/devblackops/PasswordState/blob/master/LICENSE'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/devblackops/PasswordState'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = '
# 1.2.3 (2017-07-19)
  * PR8 - Added support for PowerShell Core by using new method in Invoke-RestMethod to skip certificate checking.
    Existing method (using C#) is still in place for PowerShell 5.x and below. (via @ephos)

## 1.2.2 (2016-10-11)
  * Fixed bug in New-PasswordStatePassword not returning newly created password

## 1.2.1 (2016-08-23)
  * Fixed bug in New-PasswordStatePassword when trying to display -WhatIf message when a document is not being uploaded

## 1.2.0 (2016-07-26)
  * Added option to upload file to New-PasswordStatePassword
  * Added new function to upload document (New-PasswordStateDocument)
  * Fixed searching by username in Find-PasswordStatePassword

## 1.1.0 (2016-07-17)
  * Add pipeline scripts
  * Refactor module layout
  * Add additional Pester tests
'

    } # End of PSData hashtable

} # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}